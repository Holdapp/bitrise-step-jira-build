#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Update JIRA issues with build number
summary: |-
  Update fields of JIRA issues with build number.
description: |-
  Update fields of JIRA issues associated with current MR/PR, with the current build number.

  ### How does it work?
  
  First, the step needs to know tasks associated with the build, so it examines Git history of the merge that it was triggered by. 
  Each merge request can have multiple tasks related to it. So step extracts all the messages of commits involved from the merge commit, 
  and it looks for task keys using a predefined format (for example, [ABCD-1234]). Then using JIRA API, it updates custom fields of these tasks with current build number. 

  Additionally step can keep ticket history from failed/aborted builds. It uses Bitrise API to gather information about the commits 
  from all aborted or failed builds preceding the current one.

  The step does not clone git repository by itself, instead it is using the one located at `$BITRISE_SOURCE_DIR`. 
  Make sure repository is cloned before using it ([guide](https://devcenter.bitrise.io/en/steps-and-workflows/generic-workflow-recipes/cloning-a-git-repository.html)).

  ### Useful links
  - [About this step](https://www.holdapp.com/blog/bitrise-tests-made-easier-with-jira-build-step)

website: https://github.com/Holdapp/bitrise-step-jira-build
source_code_url: https://github.com/Holdapp/bitrise-step-jira-build
support_url: https://github.com/Holdapp/bitrise-step-jira-build/issues

type_tags:
  - notification

is_always_run: false
is_skippable: true

deps:
  brew:
  - name: pkg-config
  apt_get:
  - name: pkg-config

inputs:
  - app_version:
    opts:
      title: "App version"
      summary: "App version (for example 1.0.0)"
      description: |-
        If you develop an iOS project, you can extract the version number from Info.plist of the main target. It’s called `CFBundleShortVersionString`. 
        Alternatively, you may use a custom step that can do it for you: [bitrise-step-xcode-build-version](https://github.com/nodes-ios/bitrise-step-xcode-build-version)
      is_required: true
  - jira_host:
    opts:
      title: "JIRA host"
      summary: "Your JIRA instance URL (e.g. https://company.atlassian.net)"
      is_required: true
  - jira_custom_field_id:
    opts:
      title: "JIRA Custom Field ID"
      summary: "Custom field id for the build number (integer)"
      description: |-
        You can read how to find it [here](https://confluence.atlassian.com/jirakb/how-to-find-id-for-custom-field-s-744522503.html). 
        And if you don’t have a custom field yet, check out this [guide](https://confluence.atlassian.com/adminjiraserver/adding-a-custom-field-938847222.html) that explains how to create it.
      is_required: true
  - jira_username:
    opts:
      title: "JIRA username"
      summary: "User (or bot) username"
      is_required: true
  - jira_access_token: 
    opts:
      title: "JIRA access token"
      summary: "User (or bot) password or API token (you can generate it [here](https://confluence.atlassian.com/cloud/api-tokens-938839638.html))."
      is_required: true
      is_sensitive: true
  - jira_issue_pattern: "([A-Z]{1,10}-[0-9]+)"
    opts:
      title: "Regex pattern used to identify issue keys from commit messages"
      summary: "A regular expression for matching issue keys in commit messages. For example, ([A-Z]{1,10}-[0-9]+)"
      is_required: true
  - bitrise_api_token:
    opts: 
      title: "Token for bitrise.io API"
      summary: "Access token for bitrise.io API, you can find your API token [here](https://discuss.bitrise.io/t/personal-access-tokens-beta/1383)"
      is_required: false
      is_sensitive: true
  - overwrite_field: "true"
    opts:
      title: "Should overwrite content of custom field"
      summary: "If true, existing field content will be overridden. If false, a new version will try to replace the old version in the currently set field content"
      is_expand: true
      is_required: true
      value_options:
      - "true"
      - "false"

outputs:
